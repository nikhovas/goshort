package test

import (
	"bytes"
	"encoding/json"
	"github.com/spf13/viper"
	"goshort/src"
	"net/http"
	"net/http/httptest"
	"testing"

	. "gopkg.in/check.v1"
	"goshort/utils"
)

func executeRequest(app src.App, req *http.Request) *httptest.ResponseRecorder {
	rr := httptest.NewRecorder()
	app.Router.ServeHTTP(rr, req)
	return rr
}

func Test(t *testing.T) { TestingT(t) }

type MySuite struct{}

var _ = Suite(&MySuite{})

func (s *MySuite) SetUpSuite(_ *C) {
	utils.SetupViper()
	src.AppObject = src.App{}
	src.AppObject.Initialize(viper.GetString("redis.network"),
		viper.GetString("redis.ip"),
		viper.GetInt("redis.poolSize"))
}

func (s *MySuite) SetAndGetGeneric(c *C, jsonStr []byte, expectedUrl *src.Url) {
	req, _ := http.NewRequest("POST", "/urls/", bytes.NewBuffer(jsonStr))
	req.Header.Set("Content-Type", "application/json")

	response := executeRequest(src.AppObject, req)
	c.Check(response.Code, Equals, 200)
	var url src.Url
	dec := json.NewDecoder(response.Body)
	dec.DisallowUnknownFields()
	_ = dec.Decode(&url)

	if expectedUrl.Key != "" {
		c.Check(url.Key, Equals, expectedUrl.Key)
	} else {
		expectedUrl.Key = url.Key
	}
	c.Check(url.Url, Equals, expectedUrl.Url)
	c.Check(url.Code, Equals, expectedUrl.Code)
	c.Check(url.Autogenerated, Equals, expectedUrl.Autogenerated)

	req, _ = http.NewRequest("GET", "/"+expectedUrl.Key, bytes.NewBuffer([]byte{}))
	response = executeRequest(src.AppObject, req)
	c.Check(response.Code, Equals, expectedUrl.Code)
	c.Check(response.Header().Get("Location"), Equals, expectedUrl.Url)
}

func (s *MySuite) TestSimplePost(c *C) {
	s.SetAndGetGeneric(
		c,
		[]byte(`{
			"key": "yandex",
			"url": "https://yandex.ru"
		}`),
		&src.Url{
			Key:           "yandex",
			Url:           "https://yandex.ru",
			Code:          301,
			Autogenerated: false,
		})
}

func (s *MySuite) TestGenericPost(c *C) {
	s.SetAndGetGeneric(
		c,
		[]byte(`{"url": "https://yandex.ru"}`),
		&src.Url{
			Key:           "",
			Url:           "https://yandex.ru",
			Code:          301,
			Autogenerated: true,
		})
}

func (s *MySuite) TestNotDuplicatingGenericUrl(c *C) {
	url := src.Url{
		Key:           "",
		Url:           "https://fjhdsjkhk.ru",
		Code:          301,
		Autogenerated: true,
	}
	s.SetAndGetGeneric(c, []byte(`{"url": "https://fjhdsjkhk.ru"}`), &url)
	s.SetAndGetGeneric(c, []byte(`{"url": "https://fjhdsjkhk.ru"}`), &url)
}
