package test

import (
	"bytes"
	"encoding/json"
	. "gopkg.in/check.v1"
	"goshort"
	"net/http"
)

func (s *MySuite) SetAndGetGeneric(c *C, jsonStr []byte, expectedURL *goshort.Url) {
	req, err := http.NewRequest("POST", "/urls/", bytes.NewBuffer(jsonStr))
	c.Check(err, Equals, nil)
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("Authorization", "Bearer demo")

	response := executeRequest(goshort.AppObject, req)
	c.Check(response.Code, Equals, 200)
	var url goshort.Url
	dec := json.NewDecoder(response.Body)
	dec.DisallowUnknownFields()
	err = dec.Decode(&url)
	c.Check(err, Equals, nil)

	if expectedURL.Key != "" {
		c.Check(url.Key, Equals, expectedURL.Key)
	} else {
		expectedURL.Key = url.Key
	}
	c.Check(url.Url, Equals, expectedURL.Url)
	c.Check(url.Code, Equals, expectedURL.Code)
	c.Check(url.Autogenerated, Equals, expectedURL.Autogenerated)

	req, _ = http.NewRequest("GET", "/"+expectedURL.Key, bytes.NewBuffer([]byte{}))
	response = executeRequest(goshort.AppObject, req)
	c.Check(response.Code, Equals, expectedURL.Code)
	c.Check(response.Header().Get("Location"), Equals, expectedURL.Url)
}

func (s *MySuite) TestSimplePost(c *C) {
	s.SetAndGetGeneric(
		c,
		[]byte(`{
			"key": "yandex",
			"url": "https://yandex.ru"
		}`),
		&goshort.Url{
			Key:           "yandex",
			Url:           "https://yandex.ru",
			Code:          301,
			Autogenerated: false,
		})
}

func (s *MySuite) TestGenericPost(c *C) {
	s.SetAndGetGeneric(
		c,
		[]byte(`{"url": "https://yandex.ru"}`),
		&goshort.Url{
			Key:           "",
			Url:           "https://yandex.ru",
			Code:          301,
			Autogenerated: true,
		})
}

func (s *MySuite) TestNotDuplicatingGenericUrl(c *C) {
	url := goshort.Url{
		Key:           "",
		Url:           "https://fjhdsjkhk.ru",
		Code:          301,
		Autogenerated: true,
	}
	s.SetAndGetGeneric(c, []byte(`{"url": "https://fjhdsjkhk.ru"}`), &url)
	s.SetAndGetGeneric(c, []byte(`{"url": "https://fjhdsjkhk.ru"}`), &url)
}
